{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrad\\\\OneDrive\\\\Desktop\\\\OSM_Evaluation_System\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/AdminLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email] = useState(localStorage.getItem(\"emailToReset\") || \"\" // Retrieve email passed from Forgot Password\n  );\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setSuccess(data.message); // Display success message\n        setTimeout(() => {\n          window.location.href = \"/adminlogin\"; // Redirect after successful password reset\n        }, 2000);\n      } else {\n        setError(data.error); // Display error message\n      }\n    } catch (error) {\n      setError(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Set a new password for your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          disabled: true // Prevent modification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"Enter new password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm new password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"PEVvwm+2Hrm1LgxU5RxOVg+HNqc=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","_s","email","localStorage","getItem","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","handleResetPassword","e","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","status","message","setTimeout","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","disabled","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/shrad/OneDrive/Desktop/OSM_Evaluation_System/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/AdminLogin.css\";\r\n\r\nconst ResetPassword = () => {\r\n  const [email] = useState(\r\n    localStorage.getItem(\"emailToReset\") || \"\" // Retrieve email passed from Forgot Password\r\n  );\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/reset-password`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ email, newPassword }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        setSuccess(data.message); // Display success message\r\n        setTimeout(() => {\r\n          window.location.href = \"/adminlogin\"; // Redirect after successful password reset\r\n        }, 2000);\r\n      } else {\r\n        setError(data.error); // Display error message\r\n      }\r\n    } catch (error) {\r\n      setError(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-login-container\">\r\n      <h1>Reset Password</h1>\r\n      <p>Set a new password for your account</p>\r\n      <form className=\"login-form\" onSubmit={handleResetPassword}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Your Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            disabled // Prevent modification\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"newPassword\">New Password *</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            placeholder=\"Enter new password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm Password *</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            placeholder=\"Confirm new password\"\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {success && <p className=\"success\">{success}</p>}\r\n        <button type=\"submit\" className=\"login-btn\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}